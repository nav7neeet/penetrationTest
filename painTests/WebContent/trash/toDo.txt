1. Change name of default session id.

2. LDAP

3. Git Repo

4. URL Encoding

5. Place holders in jsp or java

6. Test HTTP methods like trace, delete

7. Command line tool firebug

8. HTTP strict transport security header

9. CSRF, modifying host, referrer header

10. Suppressing server version in header

11. Cross Frame scripting

12. Storing password hashes in database and authentication against hashes.

13. Captcha

14. Dos attack

15. Dos attack detection and prevention

16. Restrict multiple loginss



====================================================================
Git - sr37s9

1. Change the name of default session id 

2. Try secure cookie i.e. cookie that is sent only over https - done man done..i got that bro..we can only send secure cookies over https

3. Domain and path attributes in cookie (vulnerabilities in www.example.com might allow an attacker to get access to the session IDs from secure.example.com. ) - oh man its the host field which tells the browser where to send the cookie..
if i make it google.com my jsessions will go to google..no i dont want that..
cool bro got that..the path attribute sends the cookie to the appropriate application

4. Implement session time-out - done

5. Avoid browser caching - done

6. Url-encoding 

7. place holders in jsp or java

8. add home page navigation on all the pages, basically change the common page - done

9. LDAP clear karna padega bhai!

10. Authorization - done man done! role based

11. MD5, SHA-1, SHA -256 - done

12. Error handling - done for errors like 404 and for exception.

13. testing Http methodds like trace, delete - try again.

14. using the command line tool in Firebug

15. basic, digest and form based authentication - done..form based is left, form based done.